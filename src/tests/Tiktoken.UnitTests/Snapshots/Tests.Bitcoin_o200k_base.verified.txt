{
  Item1: [
    1,
    .,
     Introduction
    
,
    Commerce,
     on,
     the,
     Internet,
     has,
     come,
     to,
     rely,
     almost,
     exclusively,
     on,
     financial,
     institutions,
     serving,
     as
    
,
    trusted,
     third,
     parties,
     to,
     process,
     electronic,
     payments,
    .,
     While,
     the,
     system,
     works,
     well,
     enough,
     for
    
,
    most,
     transactions,
    ,,
     it,
     still,
     suffers,
     from,
     the,
     inherent,
     weaknesses,
     of,
     the,
     trust,
     based,
     model
    
.
,
    Com,
    pletely,
     non,
    -re,
    versible,
     transactions,
     are,
     not,
     really,
     possible,
    ,,
     since,
     financial,
     institutions,
     cannot
    
,
    avoid,
     medi,
    ating,
     disputes,
    .,
     The,
     cost,
     of,
     mediation,
     increases,
     transaction,
     costs,
    ,,
     limiting,
     the
    
,
    minimum,
     practical,
     transaction,
     size,
     and,
     cutting,
     off,
     the,
     possibility,
     for,
     small,
     casual,
     transactions
    
,
,
    and,
     there,
     is,
     a,
     broader,
     cost,
     in,
     the,
     loss,
     of,
     ability,
     to,
     make,
     non,
    -re,
    versible,
     payments,
     for,
     non,
    re,
    versible,
     services,
    .,
     With,
     the,
     possibility,
     of,
     reversal,
    ,,
     the,
     need,
     for,
     trust,
     spreads,
    .,
     Merch,
    ants,
     must
    
,
    be,
     wary,
     of,
     their,
     customers,
    ,,
     hass,
    ling,
     them,
     for,
     more,
     information,
     than,
     they,
     would,
     otherwise,
     need
    
.
,
    A,
     certain,
     percentage,
     of,
     fraud,
     is,
     accepted,
     as,
     unavoidable,
    .,
     These,
     costs,
     and,
     payment,
     uncertainties
    
,
    can,
     be,
     avoided,
     in,
     person,
     by,
     using,
     physical,
     currency,
    ,,
     but,
     no,
     mechanism,
     exists,
     to,
     make,
     payments
    
,
    over,
     a,
     communications,
     channel,
     without,
     a,
     trusted,
     party
    
.
,
    What,
     is,
     needed,
     is,
     an,
     electronic,
     payment,
     system,
     based,
     on,
     crypt,
    ographic,
     proof,
     instead,
     of,
     trust
    
,
,
    allow,
    ing,
     any,
     two,
     willing,
     parties,
     to,
     transact,
     directly,
     with,
     each,
     other,
     without,
     the,
     need,
     for,
     a,
     trusted
    
,
    third,
     party,
    .,
     Transactions,
     that,
     are,
     computational,
    ly,
     impr,
    actical,
     to,
     reverse,
     would,
     protect,
     sellers
    
,
    from,
     fraud,
    ,,
     and,
     routine,
     escrow,
     mechanisms,
     could,
     easily,
     be,
     implemented,
     to,
     protect,
     buyers,
    .,
     In
    
,
    this,
     paper,
    ,,
     we,
     propose,
     a,
     solution,
     to,
     the,
     double,
    -sp,
    ending,
     problem,
     using,
     a,
     peer,
    -to,
    -peer,
     distributed
    
,
    timestamp,
     server,
     to,
     generate,
     computational,
     proof,
     of,
     the,
     chronological,
     order,
     of,
     transactions,
    .,
     The
    
,
    system,
     is,
     secure,
     as,
     long,
     as,
     honest,
     nodes,
     collectively,
     control,
     more,
     CPU,
     power,
     than,
     any
    
,
    co,
    oper,
    ating,
     group,
     of,
     attacker,
     nodes
    
.
,
    1
    
,
    2,
    .,
     Transactions
    
,
    We,
     define,
     an,
     electronic,
     coin,
     as,
     a,
     chain,
     of,
     digital,
     signatures,
    .,
     Each,
     owner,
     transfers,
     the,
     coin,
     to,
     the
    
,
    next,
     by,
     digitally,
     signing,
     a,
     hash,
     of,
     the,
     previous,
     transaction,
     and,
     the,
     public,
     key,
     of,
     the,
     next,
     owner
    
,
    and,
     adding,
     these,
     to,
     the,
     end,
     of,
     the,
     coin,
    .,
     A,
     pay,
    ee,
     can,
     verify,
     the,
     signatures,
     to,
     verify,
     the,
     chain,
     of
    
,
    ownership
    
.
,
    The,
     problem,
     of,
     course,
     is,
     the,
     pay,
    ee,
     can't,
     verify,
     that,
     one,
     of,
     the,
     owners,
     did,
     not,
     double,
    -sp,
    end
    
,
    the,
     coin,
    .,
     A,
     common,
     solution,
     is,
     to,
     introduce,
     a,
     trusted,
     central,
     authority,
    ,,
     or,
     mint,
    ,,
     that,
     checks,
     every
    
,
    transaction,
     for,
     double,
     spending,
    .,
     After,
     each,
     transaction,
    ,,
     the,
     coin,
     must,
     be,
     returned,
     to,
     the,
     mint,
     to
    
,
    issue,
     a,
     new,
     coin,
    ,,
     and,
     only,
     coins,
     issued,
     directly,
     from,
     the,
     mint,
     are,
     trusted,
     not,
     to,
     be,
     double,
    -sp,
    ent
    
.
,
    The,
     problem,
     with,
     this,
     solution,
     is,
     that,
     the,
     fate,
     of,
     the,
     entire,
     money,
     system,
     depends,
     on,
     the
    
,
    company,
     running,
     the,
     mint,
    ,,
     with,
     every,
     transaction,
     having,
     to,
     go,
     through,
     them,
    ,,
     just,
     like,
     a,
     bank
    
.
,
    We,
     need,
     a,
     way,
     for,
     the,
     pay,
    ee,
     to,
     know,
     that,
     the,
     previous,
     owners,
     did,
     not,
     sign,
     any,
     earlier
    
,
    transactions,
    .,
     For,
     our,
     purposes,
    ,,
     the,
     earliest,
     transaction,
     is,
     the,
     one,
     that,
     counts,
    ,,
     so,
     we,
     don't,
     care
    
,
    about,
     later,
     attempts,
     to,
     double,
    -sp,
    end,
    .,
     The,
     only,
     way,
     to,
     confirm,
     the,
     absence,
     of,
     a,
     transaction,
     is,
     to
    
,
    be,
     aware,
     of,
     all,
     transactions,
    .,
     In,
     the,
     mint,
     based,
     model,
    ,,
     the,
     mint,
     was,
     aware,
     of,
     all,
     transactions,
     and
    
,
    dec,
    ided,
     which,
     arrived,
     first,
    .,
     To,
     accomplish,
     this,
     without,
     a,
     trusted,
     party,
    ,,
     transactions,
     must,
     be
    
,
    public,
    ly,
     announced,
     [,
    1,
    ],,
     and,
     we,
     need,
     a,
     system,
     for,
     participants,
     to,
     agree,
     on,
     a,
     single,
     history,
     of,
     the
    
,
    order,
     in,
     which,
     they,
     were,
     received,
    .,
     The,
     pay,
    ee,
     needs,
     proof,
     that,
     at,
     the,
     time,
     of,
     each,
     transaction,
    ,,
     the
    
,
    major,
    ity,
     of,
     nodes,
     agreed,
     it,
     was,
     the,
     first,
     received
    
.
,
    3,
    .,
     Timestamp,
     Server
    
,
    The,
     solution,
     we,
     propose,
     begins,
     with,
     a,
     timestamp,
     server,
    .,
     A,
     timestamp,
     server,
     works,
     by,
     taking,
     a
    
,
    hash,
     of,
     a,
     block,
     of,
     items,
     to,
     be,
     timestamp,
    ed,
     and,
     widely,
     publishing,
     the,
     hash,
    ,,
     such,
     as,
     in,
     a
    
,
    new,
    spaper,
     or,
     Us,
    enet,
     post,
     [,
    2,
    -,
    5,
    ].,
     The,
     timestamp,
     proves,
     that,
     the,
     data,
     must,
     have,
     existed,
     at,
     the
    
,
    time,
    ,,
     obviously,
    ,,
     in,
     order,
     to,
     get,
     into,
     the,
     hash,
    .,
     Each,
     timestamp,
     includes,
     the,
     previous,
     timestamp,
     in
    
,
    its,
     hash,
    ,,
     forming,
     a,
     chain,
    ,,
     with,
     each,
     additional,
     timestamp,
     reinforcing,
     the,
     ones,
     before,
     it
    
.
,
    2
    
,
    Block
    
,
    Item,
     Item
    
 ...
,
    Hash
    
,
    Block
    
,
    Item,
     Item
    
 ...
,
    Hash
    
,
    Transaction
    
,
    Owner,
     ,
    1,
    's
    
,
    Public,
     Key
    
,
    Owner,
     ,
    0,
    's
    
,
    Signature
    
,
    Hash
    
,
    Transaction
    
,
    Owner,
     ,
    2,
    's
    
,
    Public,
     Key
    
,
    Owner,
     ,
    1,
    's
    
,
    Signature
    
,
    Hash
    
,
    Verify
    
,
    Transaction
    
,
    Owner,
     ,
    3,
    's
    
,
    Public,
     Key
    
,
    Owner,
     ,
    2,
    's
    
,
    Signature
    
,
    Hash
    
,
    Verify
    
,
    Owner,
     ,
    2,
    's
    
,
    Private,
     Key
    
,
    Owner,
     ,
    1,
    's
    
,
    Private,
     Key
    
,
    Sign
    
,
    Sign
    
,
    Owner,
     ,
    3,
    's
    
,
    Private,
     Key
    
,
    4,
    .,
     Proof,
    -of,
    -,
    Work
    
,
    To,
     implement,
     a,
     distributed,
     timestamp,
     server,
     on,
     a,
     peer,
    -to,
    -peer,
     basis,
    ,,
     we,
     will,
     need,
     to,
     use,
     a,
     pro,
    o,
    fo,
    f,
    -work,
     system,
     similar,
     to,
     Adam,
     Back,
    's,
     Hash,
    cash,
     [,
    6,
    ],,
     rather,
     than,
     newspaper,
     or,
     Us,
    enet,
     posts
    
.
,
    The,
     proof,
    -of,
    -work,
     involves,
     scanning,
     for,
     a,
     value,
     that,
     when,
     hashed,
    ,,
     such,
     as,
     with,
     SHA,
    -,
    256,
    ,,
     the
    
,
    hash,
     begins,
     with,
     a,
     number,
     of,
     zero,
     bits,
    .,
     The,
     average,
     work,
     required,
     is,
     exponential,
     in,
     the,
     number
    
,
    of,
     zero,
     bits,
     required,
     and,
     can,
     be,
     verified,
     by,
     executing,
     a,
     single,
     hash
    
.
,
    For,
     our,
     timestamp,
     network,
    ,,
     we,
     implement,
     the,
     proof,
    -of,
    -work,
     by,
     increment,
    ing,
     a,
     nonce,
     in,
     the
    
,
    block,
     until,
     a,
     value,
     is,
     found,
     that,
     gives,
     the,
     block,
    's,
     hash,
     the,
     required,
     zero,
     bits,
    .,
     Once,
     the,
     CPU
    
,
    eff,
    ort,
     has,
     been,
     exp,
    ended,
     to,
     make,
     it,
     satisfy,
     the,
     proof,
    -of,
    -work,
    ,,
     the,
     block,
     cannot,
     be,
     changed
    
,
    without,
     re,
    doing,
     the,
     work,
    .,
     As,
     later,
     blocks,
     are,
     chained,
     after,
     it,
    ,,
     the,
     work,
     to,
     change,
     the,
     block
    
,
    would,
     include,
     re,
    doing,
     all,
     the,
     blocks,
     after,
     it
    
.
,
    The,
     proof,
    -of,
    -work,
     also,
     solves,
     the,
     problem,
     of,
     determining,
     representation,
     in,
     majority,
     decision
    
,
    making,
    .,
     If,
     the,
     majority,
     were,
     based,
     on,
     one,
    -IP,
    -address,
    -one,
    -v,
    ote,
    ,,
     it,
     could,
     be,
     sub,
    verted,
     by,
     anyone
    
,
    able,
     to,
     allocate,
     many,
     IP,
    s,
    .,
     Proof,
    -of,
    -work,
     is,
     essentially,
     one,
    -,
    CPU,
    -one,
    -v,
    ote,
    .,
     The,
     majority
    
,
    decision,
     is,
     represented,
     by,
     the,
     longest,
     chain,
    ,,
     which,
     has,
     the,
     greatest,
     proof,
    -of,
    -work,
     effort,
     invested
    
,
    in,
     it,
    .,
     If,
     a,
     majority,
     of,
     CPU,
     power,
     is,
     controlled,
     by,
     honest,
     nodes,
    ,,
     the,
     honest,
     chain,
     will,
     grow,
     the
    
,
    fast,
    est,
     and,
     out,
    pace,
     any,
     competing,
     chains,
    .,
     To,
     modify,
     a,
     past,
     block,
    ,,
     an,
     attacker,
     would,
     have,
     to
    
,
    redo,
     the,
     proof,
    -of,
    -work,
     of,
     the,
     block,
     and,
     all,
     blocks,
     after,
     it,
     and,
     then,
     catch,
     up,
     with,
     and,
     surpass,
     the
    
,
    work,
     of,
     the,
     honest,
     nodes,
    .,
     We,
     will,
     show,
     later,
     that,
     the,
     probability,
     of,
     a,
     slower,
     attacker,
     catching,
     up
    
,
    d,
    imin,
    ishes,
     exponentially,
     as,
     subsequent,
     blocks,
     are,
     added
    
.
,
    To,
     compensate,
     for,
     increasing,
     hardware,
     speed,
     and,
     varying,
     interest,
     in,
     running,
     nodes,
     over,
     time
    
,
,
    the,
     proof,
    -of,
    -work,
     difficulty,
     is,
     determined,
     by,
     a,
     moving,
     average,
     targeting,
     an,
     average,
     number,
     of
    
,
    blocks,
     per,
     hour,
    .,
     If,
     they're,
     generated,
     too,
     fast,
    ,,
     the,
     difficulty,
     increases
    
.
,
    5,
    .,
     Network
    
,
    The,
     steps,
     to,
     run,
     the,
     network,
     are,
     as,
     follows
    
:
,
    1,
    ),
     New,
     transactions,
     are,
     broadcast,
     to,
     all,
     nodes
    
.
,
    2,
    ),
     Each,
     node,
     collects,
     new,
     transactions,
     into,
     a,
     block
    
.
,
    3,
    ),
     Each,
     node,
     works,
     on,
     finding,
     a,
     difficult,
     proof,
    -of,
    -work,
     for,
     its,
     block
    
.
,
    4,
    ),
     When,
     a,
     node,
     finds,
     a,
     proof,
    -of,
    -work,
    ,,
     it,
     broadcasts,
     the,
     block,
     to,
     all,
     nodes
    
.
,
    5,
    ),
     Nodes,
     accept,
     the,
     block,
     only,
     if,
     all,
     transactions,
     in,
     it,
     are,
     valid,
     and,
     not,
     already,
     spent
    
.
,
    6,
    ),
     Nodes,
     express,
     their,
     acceptance,
     of,
     the,
     block,
     by,
     working,
     on,
     creating,
     the,
     next,
     block,
     in,
     the
    
,
    chain,
    ,,
     using,
     the,
     hash,
     of,
     the,
     accepted,
     block,
     as,
     the,
     previous,
     hash
    
.
,
    Nodes,
     always,
     consider,
     the,
     longest,
     chain,
     to,
     be,
     the,
     correct,
     one,
     and,
     will,
     keep,
     working,
     on
    
,
    ext,
    ending,
     it,
    .,
     If,
     two,
     nodes,
     broadcast,
     different,
     versions,
     of,
     the,
     next,
     block,
     simultaneously,
    ,,
     some
    
,
    nodes,
     may,
     receive,
     one,
     or,
     the,
     other,
     first,
    .,
     In,
     that,
     case,
    ,,
     they,
     work,
     on,
     the,
     first,
     one,
     they,
     received
    
,
,
    but,
     save,
     the,
     other,
     branch,
     in,
     case,
     it,
     becomes,
     longer,
    .,
     The,
     tie,
     will,
     be,
     broken,
     when,
     the,
     next,
     pro,
    o,
    fo,
    f,
    -work,
     is,
     found,
     and,
     one,
     branch,
     becomes,
     longer,
    ;,
     the,
     nodes,
     that,
     were,
     working,
     on,
     the,
     other
    
,
    branch,
     will,
     then,
     switch,
     to,
     the,
     longer,
     one
    
.
,
    3
    
,
    Block
    
,
    Prev,
     Hash,
     Non,
    ce
    
,
    Tx,
     Tx
    
 ...
,
    Block
    
,
    Prev,
     Hash,
     Non,
    ce
    
,
    Tx,
     Tx
    
 ...
,
    New,
     transaction,
     broadcasts,
     do,
     not,
     necessarily,
     need,
     to,
     reach,
     all,
     nodes,
    .,
     As,
     long,
     as,
     they,
     reach
    
,
    many,
     nodes,
    ,,
     they,
     will,
     get,
     into,
     a,
     block,
     before,
     long,
    .,
     Block,
     broadcasts,
     are,
     also,
     tolerant,
     of,
     dropped
    
,
    messages,
    .,
     If,
     a,
     node,
     does,
     not,
     receive,
     a,
     block,
    ,,
     it,
     will,
     request,
     it,
     when,
     it,
     receives,
     the,
     next,
     block,
     and
    
,
    real,
    izes,
     it,
     missed,
     one
    
.
,
    6,
    .,
     Incent,
    ive
    
,
    By,
     convention,
    ,,
     the,
     first,
     transaction,
     in,
     a,
     block,
     is,
     a,
     special,
     transaction,
     that,
     starts,
     a,
     new,
     coin,
     owned
    
,
    by,
     the,
     creator,
     of,
     the,
     block,
    .,
     This,
     adds,
     an,
     incentive,
     for,
     nodes,
     to,
     support,
     the,
     network,
    ,,
     and,
     provides
    
,
    a,
     way,
     to,
     initially,
     distribute,
     coins,
     into,
     circulation,
    ,,
     since,
     there,
     is,
     no,
     central,
     authority,
     to,
     issue,
     them
    
.
,
    The,
     steady,
     addition,
     of,
     a,
     constant,
     of,
     amount,
     of,
     new,
     coins,
     is,
     analogous,
     to,
     gold,
     miners,
     exp,
    ending
    
,
    resources,
     to,
     add,
     gold,
     to,
     circulation,
    .,
     In,
     our,
     case,
    ,,
     it,
     is,
     CPU,
     time,
     and,
     electricity,
     that,
     is,
     exp,
    ended
    
.
,
    The,
     incentive,
     can,
     also,
     be,
     funded,
     with,
     transaction,
     fees,
    .,
     If,
     the,
     output,
     value,
     of,
     a,
     transaction,
     is
    
,
    less,
     than,
     its,
     input,
     value,
    ,,
     the,
     difference,
     is,
     a,
     transaction,
     fee,
     that,
     is,
     added,
     to,
     the,
     incentive,
     value,
     of
    
,
    the,
     block,
     containing,
     the,
     transaction,
    .,
     Once,
     a,
     predetermined,
     number,
     of,
     coins,
     have,
     entered
    
,
    cir,
    culation,
    ,,
     the,
     incentive,
     can,
     transition,
     entirely,
     to,
     transaction,
     fees,
     and,
     be,
     completely,
     inflation
    
,
    free
    
.
,
    The,
     incentive,
     may,
     help,
     encourage,
     nodes,
     to,
     stay,
     honest,
    .,
     If,
     a,
     greedy,
     attacker,
     is,
     able,
     to
    
,
    assemble,
     more,
     CPU,
     power,
     than,
     all,
     the,
     honest,
     nodes,
    ,,
     he,
     would,
     have,
     to,
     choose,
     between,
     using,
     it
    
,
    to,
     def,
    raud,
     people,
     by,
     stealing,
     back,
     his,
     payments,
    ,,
     or,
     using,
     it,
     to,
     generate,
     new,
     coins,
    .,
     He,
     ought,
     to
    
,
    find,
     it,
     more,
     profitable,
     to,
     play,
     by,
     the,
     rules,
    ,,
     such,
     rules,
     that,
     favour,
     him,
     with,
     more,
     new,
     coins,
     than
    
,
    everyone,
     else,
     combined,
    ,,
     than,
     to,
     undermine,
     the,
     system,
     and,
     the,
     validity,
     of,
     his,
     own,
     wealth
    
.
,
    7,
    .,
     Re,
    claim,
    ing,
     Disk,
     Space
    
,
    Once,
     the,
     latest,
     transaction,
     in,
     a,
     coin,
     is,
     buried,
     under,
     enough,
     blocks,
    ,,
     the,
     spent,
     transactions,
     before
    
,
    it,
     can,
     be,
     discarded,
     to,
     save,
     disk,
     space,
    .,
     To,
     facilitate,
     this,
     without,
     breaking,
     the,
     block,
    's,
     hash
    
,
,
    transactions,
     are,
     hashed,
     in,
     a,
     Mer,
    kle,
     Tree,
     [,
    7,
    ][,
    2,
    ][,
    5,
    ],,
     with,
     only,
     the,
     root,
     included,
     in,
     the,
     block,
    's,
     hash
    
.
,
    Old,
     blocks,
     can,
     then,
     be,
     compact,
    ed,
     by,
     st,
    ubbing,
     off,
     branches,
     of,
     the,
     tree,
    .,
     The,
     interior,
     hashes,
     do
    
,
    not,
     need,
     to,
     be,
     stored
    
.
,
    A,
     block,
     header,
     with,
     no,
     transactions,
     would,
     be,
     about,
     ,
    80,
     bytes,
    .,
     If,
     we,
     suppose,
     blocks,
     are
    
,
    generated,
     every,
     ,
    10,
     minutes,
    ,,
     ,
    80,
     bytes,
     *,
     ,
    6,
     *,
     ,
    24,
     *,
     ,
    365,
     =,
     ,
    4,
    .,
    2,
    MB,
     per,
     year,
    .,
     With,
     computer,
     systems
    
,
    typically,
     selling,
     with,
     ,
    2,
    GB,
     of,
     RAM,
     as,
     of,
     ,
    200,
    8,
    ,,
     and,
     Moore,
    's,
     Law,
     predicting,
     current,
     growth,
     of
    
,
    1,
    .,
    2,
    GB,
     per,
     year,
    ,,
     storage,
     should,
     not,
     be,
     a,
     problem,
     even,
     if,
     the,
     block,
     headers,
     must,
     be,
     kept,
     in
    
,
    memory
    
.
,
    4
    
,
    Block,
     Block
    
,
    Block,
     Header,
     (,
    Block,
     Hash
    
)
,
    Prev,
     Hash,
     Non,
    ce
    
,
    Hash,
    01
    
,
    Hash,
    0,
     Hash,
    1,
     Hash,
    2,
     Hash,
    3
    
,
    Hash,
    23
    
,
    Root,
     Hash
    
,
    Hash,
    01
    
,
    Hash,
    2
    
,
    Tx,
    3
    
,
    Hash,
    23
    
,
    Block,
     Header,
     (,
    Block,
     Hash
    
)
,
    Root,
     Hash
    
,
    Transactions,
     Has,
    hed,
     in,
     a,
     Mer,
    kle,
     Tree,
     After,
     Pr,
    uning,
     Tx,
    0,
    -,
    2,
     from,
     the,
     Block
    
,
    Prev,
     Hash,
     Non,
    ce
    
,
    Hash,
    3
    
,
    Tx,
    0,
     Tx,
    1,
     Tx,
    2,
     Tx,
    3
    
,
    8,
    .,
     Simpl,
    ified,
     Payment,
     Verification
    
,
    It,
     is,
     possible,
     to,
     verify,
     payments,
     without,
     running,
     a,
     full,
     network,
     node,
    .,
     A,
     user,
     only,
     needs,
     to,
     keep
    
,
    a,
     copy,
     of,
     the,
     block,
     headers,
     of,
     the,
     longest,
     proof,
    -of,
    -work,
     chain,
    ,,
     which,
     he,
     can,
     get,
     by,
     querying
    
,
    network,
     nodes,
     until,
     he's,
     convinced,
     he,
     has,
     the,
     longest,
     chain,
    ,,
     and,
     obtain,
     the,
     Mer,
    kle,
     branch
    
,
    link,
    ing,
     the,
     transaction,
     to,
     the,
     block,
     it's,
     timestamp,
    ed,
     in,
    .,
     He,
     can't,
     check,
     the,
     transaction,
     for
    
,
    him,
    self,
    ,,
     but,
     by,
     linking,
     it,
     to,
     a,
     place,
     in,
     the,
     chain,
    ,,
     he,
     can,
     see,
     that,
     a,
     network,
     node,
     has,
     accepted,
     it
    
,
,
    and,
     blocks,
     added,
     after,
     it,
     further,
     confirm,
     the,
     network,
     has,
     accepted,
     it
    
.
,
    As,
     such,
    ,,
     the,
     verification,
     is,
     reliable,
     as,
     long,
     as,
     honest,
     nodes,
     control,
     the,
     network,
    ,,
     but,
     is,
     more
    
,
    v,
    ulner,
    able,
     if,
     the,
     network,
     is,
     over,
    powered,
     by,
     an,
     attacker,
    .,
     While,
     network,
     nodes,
     can,
     verify
    
,
    transactions,
     for,
     themselves,
    ,,
     the,
     simplified,
     method,
     can,
     be,
     fooled,
     by,
     an,
     attack,
    er's,
     fabricated
    
,
    transactions,
     for,
     as,
     long,
     as,
     the,
     attacker,
     can,
     continue,
     to,
     overpower,
     the,
     network,
    .,
     One,
     strategy,
     to
    
,
    protect,
     against,
     this,
     would,
     be,
     to,
     accept,
     alerts,
     from,
     network,
     nodes,
     when,
     they,
     detect,
     an,
     invalid
    
,
    block,
    ,,
     prompting,
     the,
     user's,
     software,
     to,
     download,
     the,
     full,
     block,
     and,
     alerted,
     transactions,
     to
    
,
    confirm,
     the,
     incons,
    istency,
    .,
     Businesses,
     that,
     receive,
     frequent,
     payments,
     will,
     probably,
     still,
     want,
     to
    
,
    run,
     their,
     own,
     nodes,
     for,
     more,
     independent,
     security,
     and,
     quicker,
     verification
    
.
,
    9,
    .,
     Combining,
     and,
     Spl,
    itting,
     Value
    
,
    Although,
     it,
     would,
     be,
     possible,
     to,
     handle,
     coins,
     individually,
    ,,
     it,
     would,
     be,
     unw,
    ield,
    y,
     to,
     make,
     a
    
,
    se,
    parate,
     transaction,
     for,
     every,
     cent,
     in,
     a,
     transfer,
    .,
     To,
     allow,
     value,
     to,
     be,
     split,
     and,
     combined
    
,
,
    transactions,
     contain,
     multiple,
     inputs,
     and,
     outputs,
    .,
     Normally,
     there,
     will,
     be,
     either,
     a,
     single,
     input
    
,
    from,
     a,
     larger,
     previous,
     transaction,
     or,
     multiple,
     inputs,
     combining,
     smaller,
     amounts,
    ,,
     and,
     at,
     most,
     two
    
,
    outputs,
    :,
     one,
     for,
     the,
     payment,
    ,,
     and,
     one,
     returning,
     the,
     change,
    ,,
     if,
     any,
    ,,
     back,
     to,
     the,
     sender
    
.
,
    It,
     should,
     be,
     noted,
     that,
     fan,
    -out,
    ,,
     where,
     a,
     transaction,
     depends,
     on,
     several,
     transactions,
    ,,
     and,
     those
    
,
    transactions,
     depend,
     on,
     many,
     more,
    ,,
     is,
     not,
     a,
     problem,
     here,
    .,
     There,
     is,
     never,
     the,
     need,
     to,
     extract,
     a
    
,
    complete,
     standalone,
     copy,
     of,
     a,
     transaction,
    's,
     history
    
.
,
    5
    
,
    Transaction
    
,
    In
    

    
...
,
    In,
     Out
    

    
...
,
    Hash,
    01
    
,
    Hash,
    2,
     Hash,
    3
    
,
    Hash,
    23
    
,
    Block,
     Header
    
,
    Merk,
    le,
     Root
    
,
    Prev,
     Hash,
     Non,
    ce
    
,
    Block,
     Header
    
,
    Merk,
    le,
     Root
    
,
    Prev,
     Hash,
     Non,
    ce
    
,
    Block,
     Header
    
,
    Merk,
    le,
     Root
    
,
    Prev,
     Hash,
     Non,
    ce
    
,
    Merk,
    le,
     Branch,
     for,
     Tx,
    3
    
,
    Longest,
     Proof,
    -of,
    -,
    Work,
     Chain
    
,
    Tx,
    3
    
,
    10,
    .,
     Privacy
    
,
    The,
     traditional,
     banking,
     model,
     achieves,
     a,
     level,
     of,
     privacy,
     by,
     limiting,
     access,
     to,
     information,
     to,
     the
    
,
    part,
    ies,
     involved,
     and,
     the,
     trusted,
     third,
     party,
    .,
     The,
     necessity,
     to,
     announce,
     all,
     transactions,
     publicly
    
,
    pre,
    cludes,
     this,
     method,
    ,,
     but,
     privacy,
     can,
     still,
     be,
     maintained,
     by,
     breaking,
     the,
     flow,
     of,
     information,
     in
    
,
    another,
     place,
    :,
     by,
     keeping,
     public,
     keys,
     anonymous,
    .,
     The,
     public,
     can,
     see,
     that,
     someone,
     is,
     sending
    
,
    an,
     amount,
     to,
     someone,
     else,
    ,,
     but,
     without,
     information,
     linking,
     the,
     transaction,
     to,
     anyone,
    .,
     This,
     is
    
,
    similar,
     to,
     the,
     level,
     of,
     information,
     released,
     by,
     stock,
     exchanges,
    ,,
     where,
     the,
     time,
     and,
     size,
     of
    
,
    individual,
     trades,
    ,,
     the,
     ",
    t,
    ape,
    ",,
     is,
     made,
     public,
    ,,
     but,
     without,
     telling,
     who,
     the,
     parties,
     were
    
.
,
    As,
     an,
     additional,
     firewall,
    ,,
     a,
     new,
     key,
     pair,
     should,
     be,
     used,
     for,
     each,
     transaction,
     to,
     keep,
     them
    
,
    from,
     being,
     linked,
     to,
     a,
     common,
     owner,
    .,
     Some,
     linking,
     is,
     still,
     unavoidable,
     with,
     multi,
    -input
    
,
    transactions,
    ,,
     which,
     necessarily,
     reveal,
     that,
     their,
     inputs,
     were,
     owned,
     by,
     the,
     same,
     owner,
    .,
     The,
     risk
    
,
    is,
     that,
     if,
     the,
     owner,
     of,
     a,
     key,
     is,
     revealed,
    ,,
     linking,
     could,
     reveal,
     other,
     transactions,
     that,
     belonged,
     to
    
,
    the,
     same,
     owner
    
.
,
    11,
    .,
     Calcul,
    ations
    
,
    We,
     consider,
     the,
     scenario,
     of,
     an,
     attacker,
     trying,
     to,
     generate,
     an,
     alternate,
     chain,
     faster,
     than,
     the,
     honest
    
,
    chain,
    .,
     Even,
     if,
     this,
     is,
     accomplished,
    ,,
     it,
     does,
     not,
     throw,
     the,
     system,
     open,
     to,
     arbitrary,
     changes,
    ,,
     such
    
,
    as,
     creating,
     value,
     out,
     of,
     thin,
     air,
     or,
     taking,
     money,
     that,
     never,
     belonged,
     to,
     the,
     attacker,
    .,
     Nodes,
     are
    
,
    not,
     going,
     to,
     accept,
     an,
     invalid,
     transaction,
     as,
     payment,
    ,,
     and,
     honest,
     nodes,
     will,
     never,
     accept,
     a,
     block
    
,
    cont,
    aining,
     them,
    .,
     An,
     attacker,
     can,
     only,
     try,
     to,
     change,
     one,
     of,
     his,
     own,
     transactions,
     to,
     take,
     back
    
,
    money,
     he,
     recently,
     spent
    
.
,
    The,
     race,
     between,
     the,
     honest,
     chain,
     and,
     an,
     attacker,
     chain,
     can,
     be,
     characterized,
     as,
     a,
     Bin,
    omial
    
,
    Random,
     Walk,
    .,
     The,
     success,
     event,
     is,
     the,
     honest,
     chain,
     being,
     extended,
     by,
     one,
     block,
    ,,
     increasing,
     its
    
,
    lead,
     by,
     +,
    1,
    ,,
     and,
     the,
     failure,
     event,
     is,
     the,
     attack,
    er's,
     chain,
     being,
     extended,
     by,
     one,
     block,
    ,,
     reducing,
     the
    
,
    gap,
     by,
     -,
    1
    
.
,
    The,
     probability,
     of,
     an,
     attacker,
     catching,
     up,
     from,
     a,
     given,
     deficit,
     is,
     analogous,
     to,
     a,
     Gamb,
    ler,
    's
    
,
    R,
    uin,
     problem,
    .,
     Suppose,
     a,
     gambler,
     with,
     unlimited,
     credit,
     starts,
     at,
     a,
     deficit,
     and,
     plays,
     potentially,
     an
    
,
    in,
    finite,
     number,
     of,
     trials,
     to,
     try,
     to,
     reach,
     bre,
    ake,
    ven,
    .,
     We,
     can,
     calculate,
     the,
     probability,
     he,
     ever
    
,
    re,
    aches,
     bre,
    ake,
    ven,
    ,,
     or,
     that,
     an,
     attacker,
     ever,
     catches,
     up,
     with,
     the,
     honest,
     chain,
    ,,
     as,
     follows,
     [,
    8
    
]:
,
    p,
     =,
     probability,
     an,
     honest,
     node,
     finds,
     the,
     next,
     block
    
,
    q,
     =,
     probability,
     the,
     attacker,
     finds,
     the,
     next,
     block
    
,
    q,
    z,
     =,
     probability,
     the,
     attacker,
     will,
     ever,
     catch,
     up,
     from,
     z,
     blocks,
     behind
    
,
    6
    
,
    Ident,
    ities,
     Transactions,
     Trusted
    
,
    Third,
     Party,
     Counter,
    party,
     Public
    
,
    Ident,
    ities,
     Transactions,
     Public
    
,
    New,
     Privacy,
     Model
    
,
    Traditional,
     Privacy,
     Model
    
,
    Given,
     our,
     assumption,
     that,
     p,
     >,
     q,
    ,,
     the,
     probability,
     drops,
     exponentially,
     as,
     the,
     number,
     of,
     blocks,
     the
    
,
    att,
    acker,
     has,
     to,
     catch,
     up,
     with,
     increases,
    .,
     With,
     the,
     odds,
     against,
     him,
    ,,
     if,
     he,
     doesn't,
     make,
     a,
     lucky
    
,
    l,
    unge,
     forward,
     early,
     on,
    ,,
     his,
     chances,
     become,
     van,
    ishing,
    ly,
     small,
     as,
     he,
     falls,
     further,
     behind
    
.
,
    We,
     now,
     consider,
     how,
     long,
     the,
     recipient,
     of,
     a,
     new,
     transaction,
     needs,
     to,
     wait,
     before,
     being
    
,
    s,
    ufficient,
    ly,
     certain,
     the,
     sender,
     can't,
     change,
     the,
     transaction,
    .,
     We,
     assume,
     the,
     sender,
     is,
     an,
     attacker
    
,
    who,
     wants,
     to,
     make,
     the,
     recipient,
     believe,
     he,
     paid,
     him,
     for,
     a,
     while,
    ,,
     then,
     switch,
     it,
     to,
     pay,
     back,
     to
    
,
    him,
    self,
     after,
     some,
     time,
     has,
     passed,
    .,
     The,
     receiver,
     will,
     be,
     alerted,
     when,
     that,
     happens,
    ,,
     but,
     the
    
,
    sender,
     hopes,
     it,
     will,
     be,
     too,
     late
    
.
,
    The,
     receiver,
     generates,
     a,
     new,
     key,
     pair,
     and,
     gives,
     the,
     public,
     key,
     to,
     the,
     sender,
     shortly,
     before
    
,
    sign,
    ing,
    .,
     This,
     prevents,
     the,
     sender,
     from,
     preparing,
     a,
     chain,
     of,
     blocks,
     ahead,
     of,
     time,
     by,
     working,
     on
    
,
    it,
     continuously,
     until,
     he,
     is,
     lucky,
     enough,
     to,
     get,
     far,
     enough,
     ahead,
    ,,
     then,
     executing,
     the,
     transaction,
     at
    
,
    that,
     moment,
    .,
     Once,
     the,
     transaction,
     is,
     sent,
    ,,
     the,
     dishonest,
     sender,
     starts,
     working,
     in,
     secret,
     on,
     a
    
,
    parallel,
     chain,
     containing,
     an,
     alternate,
     version,
     of,
     his,
     transaction
    
.
,
    The,
     recipient,
     waits,
     until,
     the,
     transaction,
     has,
     been,
     added,
     to,
     a,
     block,
     and,
     z,
     blocks,
     have,
     been
    
,
    linked,
     after,
     it,
    .,
     He,
     doesn't,
     know,
     the,
     exact,
     amount,
     of,
     progress,
     the,
     attacker,
     has,
     made,
    ,,
     but
    
,
    assuming,
     the,
     honest,
     blocks,
     took,
     the,
     average,
     expected,
     time,
     per,
     block,
    ,,
     the,
     attack,
    er's,
     potential
    
,
    progress,
     will,
     be,
     a,
     Po,
    isson,
     distribution,
     with,
     expected,
     value
    
:
,
    To,
     get,
     the,
     probability,
     the,
     attacker,
     could,
     still,
     catch,
     up,
     now,
    ,,
     we,
     multiply,
     the,
     Po,
    isson,
     density,
     for
    
,
    each,
     amount,
     of,
     progress,
     he,
     could,
     have,
     made,
     by,
     the,
     probability,
     he,
     could,
     catch,
     up,
     from,
     that,
     point
    
:
,
    Re,
    arr,
    anging,
     to,
     avoid,
     summ,
    ing,
     the,
     infinite,
     tail,
     of,
     the,
     distribution
    
...
,
    Con,
    verting,
     to,
     C,
     code
    
...
,
    #include,
     <,
    math,
    .h
    
>
,
    double,
     Att,
    acker,
    Success,
    Probability,
    (double,
     q,
    ,,
     int,
     z
    
)

    
{
,
     double,
     p,
     =,
     ,
    1,
    .,
    0,
     -,
     q
    
;
,
     double,
     lambda,
     =,
     z,
     *,
     (,
    q,
     /,
     p
    
);
,
     double,
     sum,
     =,
     ,
    1,
    .,
    0
    
;
,
     int,
     i,
    ,,
     k
    
;
,
     for,
     (,
    k,
     =,
     ,
    0,
    ;,
     k,
     <=,
     z,
    ;,
     k
    
++)

    
 {
,
     double,
     poisson,
     =,
     exp,
    (-,
    lambda
    
);
,
     for,
     (,
    i,
     =,
     ,
    1,
    ;,
     i,
     <=,
     k,
    ;,
     i
    
++)
,
     poisson,
     *=,
     lambda,
     /,
     i
    
;
,
     sum,
     -=,
     poisson,
     *,
     (,
    1,
     -,
     pow,
    (q,
     /,
     p,
    ,,
     z,
     -,
     k
    
));

    
 }
,
     return,
     sum
    
;

    
}
,
    7
    
,
    Running,
     some,
     results,
    ,,
     we,
     can,
     see,
     the,
     probability,
     drop,
     off,
     exponentially,
     with,
     z
    
.
,
    q,
    =,
    0,
    .,
    1
    
,
    z,
    =,
    0,
     P,
    =,
    1,
    .,
    000,
    000,
    0
    
,
    z,
    =,
    1,
     P,
    =,
    0,
    .,
    204,
    587,
    3
    
,
    z,
    =,
    2,
     P,
    =,
    0,
    .,
    050,
    977,
    9
    
,
    z,
    =,
    3,
     P,
    =,
    0,
    .,
    013,
    172,
    2
    
,
    z,
    =,
    4,
     P,
    =,
    0,
    .,
    003,
    455,
    2
    
,
    z,
    =,
    5,
     P,
    =,
    0,
    .,
    000,
    913,
    7
    
,
    z,
    =,
    6,
     P,
    =,
    0,
    .,
    000,
    242,
    8
    
,
    z,
    =,
    7,
     P,
    =,
    0,
    .,
    000,
    064,
    7
    
,
    z,
    =,
    8,
     P,
    =,
    0,
    .,
    000,
    017,
    3
    
,
    z,
    =,
    9,
     P,
    =,
    0,
    .,
    000,
    004,
    6
    
,
    z,
    =,
    10,
     P,
    =,
    0,
    .,
    000,
    001,
    2
    
,
    q,
    =,
    0,
    .,
    3
    
,
    z,
    =,
    0,
     P,
    =,
    1,
    .,
    000,
    000,
    0
    
,
    z,
    =,
    5,
     P,
    =,
    0,
    .,
    177,
    352,
    3
    
,
    z,
    =,
    10,
     P,
    =,
    0,
    .,
    041,
    660,
    5
    
,
    z,
    =,
    15,
     P,
    =,
    0,
    .,
    010,
    100,
    8
    
,
    z,
    =,
    20,
     P,
    =,
    0,
    .,
    002,
    480,
    4
    
,
    z,
    =,
    25,
     P,
    =,
    0,
    .,
    000,
    613,
    2
    
,
    z,
    =,
    30,
     P,
    =,
    0,
    .,
    000,
    152,
    2
    
,
    z,
    =,
    35,
     P,
    =,
    0,
    .,
    000,
    037,
    9
    
,
    z,
    =,
    40,
     P,
    =,
    0,
    .,
    000,
    009,
    5
    
,
    z,
    =,
    45,
     P,
    =,
    0,
    .,
    000,
    002,
    4
    
,
    z,
    =,
    50,
     P,
    =,
    0,
    .,
    000,
    000,
    6
    
,
    Sol,
    ving,
     for,
     P,
     less,
     than,
     ,
    0,
    .,
    1,
    %
    
...
,
    P,
     <,
     ,
    0,
    .,
    001
    
,
    q,
    =,
    0,
    .,
    10,
     z,
    =,
    5
    
,
    q,
    =,
    0,
    .,
    15,
     z,
    =,
    8
    
,
    q,
    =,
    0,
    .,
    20,
     z,
    =,
    11
    
,
    q,
    =,
    0,
    .,
    25,
     z,
    =,
    15
    
,
    q,
    =,
    0,
    .,
    30,
     z,
    =,
    24
    
,
    q,
    =,
    0,
    .,
    35,
     z,
    =,
    41
    
,
    q,
    =,
    0,
    .,
    40,
     z,
    =,
    89
    
,
    q,
    =,
    0,
    .,
    45,
     z,
    =,
    340
    
,
    12,
    .,
     Conclusion
    
,
    We,
     have,
     proposed,
     a,
     system,
     for,
     electronic,
     transactions,
     without,
     relying,
     on,
     trust,
    .,
     We,
     started,
     with
    
,
    the,
     usual,
     framework,
     of,
     coins,
     made,
     from,
     digital,
     signatures,
    ,,
     which,
     provides,
     strong,
     control,
     of
    
,
    ownership,
    ,,
     but,
     is,
     incomplete,
     without,
     a,
     way,
     to,
     prevent,
     double,
    -sp,
    ending,
    .,
     To,
     solve,
     this,
    ,,
     we
    
,
    pro,
    posed,
     a,
     peer,
    -to,
    -peer,
     network,
     using,
     proof,
    -of,
    -work,
     to,
     record,
     a,
     public,
     history,
     of,
     transactions
    
,
    that,
     quickly,
     becomes,
     computational,
    ly,
     impr,
    actical,
     for,
     an,
     attacker,
     to,
     change,
     if,
     honest,
     nodes
    
,
    control,
     a,
     majority,
     of,
     CPU,
     power,
    .,
     The,
     network,
     is,
     robust,
     in,
     its,
     un,
    structured,
     simplicity,
    .,
     Nodes
    
,
    work,
     all,
     at,
     once,
     with,
     little,
     coordination,
    .,
     They,
     do,
     not,
     need,
     to,
     be,
     identified,
    ,,
     since,
     messages,
     are
    
,
    not,
     routed,
     to,
     any,
     particular,
     place,
     and,
     only,
     need,
     to,
     be,
     delivered,
     on,
     a,
     best,
     effort,
     basis,
    .,
     Nodes,
     can
    
,
    leave,
     and,
     re,
    join,
     the,
     network,
     at,
     will,
    ,,
     accepting,
     the,
     proof,
    -of,
    -work,
     chain,
     as,
     proof,
     of,
     what
    
,
    h,
    app,
    ened,
     while,
     they,
     were,
     gone,
    .,
     They,
     vote,
     with,
     their,
     CPU,
     power,
    ,,
     expressing,
     their,
     acceptance,
     of
    
,
    valid,
     blocks,
     by,
     working,
     on,
     extending,
     them,
     and,
     rejecting,
     invalid,
     blocks,
     by,
     refusing,
     to,
     work,
     on
    
,
    them,
    .,
     Any,
     needed,
     rules,
     and,
     incentives,
     can,
     be,
     enforced,
     with,
     this,
     consensus,
     mechanism
    
.
,
    8
    
,
    References
    
,
    [,
    1,
    ],
     W,
    .,
     Dai,
    ,,
     ",
    b,
    -money,
    ,",
     http,
    ://,
    www,
    .we,
    idai,
    .com,
    /b,
    money,
    .txt,
    ,,
     ,
    199,
    8
    
.
,
    [,
    2,
    ],
     H,
    .,
     Mass,
    ias,
    ,,
     X,
    .S,
    .,
     Av,
    ila,
    ,,
     and,
     J,
    .-,
    J,
    .,
     Qu,
    is,
    qu,
    ater,
    ,,
     ",
    Design,
     of,
     a,
     secure,
     timestamp,
    ing,
     service,
     with,
     minimal
    
,
    trust,
     requirements,
    ,",
     In,
     ,
    20,
    th,
     Symposium,
     on,
     Information,
     Theory,
     in,
     the,
     Ben,
    el,
    ux,
    ,,
     May,
     ,
    199,
    9
    
.
,
    [,
    3,
    ],
     S,
    .,
     Haber,
    ,,
     W,
    .S,
    .,
     St,
    orn,
    etta,
    ,,
     ",
    How,
     to,
     time,
    -st,
    amp,
     a,
     digital,
     document,
    ,",
     In,
     Journal,
     of,
     Crypt,
    ology,
    ,,
     vol,
     ,
    3,
    ,,
     no
    
,
    2,
    ,,
     pages,
     ,
    99,
    -,
    111,
    ,,
     ,
    199,
    1
    
.
,
    [,
    4,
    ],
     D,
    .,
     Bayer,
    ,,
     S,
    .,
     Haber,
    ,,
     W,
    .S,
    .,
     St,
    orn,
    etta,
    ,,
     ",
    Impro,
    ving,
     the,
     efficiency,
     and,
     reliability,
     of,
     digital,
     time,
    -st,
    amping
    
,"
,
    In,
     Se,
    quences,
     II,
    :,
     Methods,
     in,
     Communication,
    ,,
     Security,
     and,
     Computer,
     Science,
    ,,
     pages,
     ,
    329,
    -,
    334,
    ,,
     ,
    199,
    3
    
.
,
    [,
    5,
    ],
     S,
    .,
     Haber,
    ,,
     W,
    .S,
    .,
     St,
    orn,
    etta,
    ,,
     ",
    Secure,
     names,
     for,
     bit,
    -,
    strings,
    ,",
     In,
     Proceedings,
     of,
     the,
     ,
    4,
    th,
     ACM,
     Conference
    
,
    on,
     Computer,
     and,
     Communications,
     Security,
    ,,
     pages,
     ,
    28,
    -,
    35,
    ,,
     April,
     ,
    199,
    7
    
.
,
    [,
    6,
    ],
     A,
    .,
     Back,
    ,,
     ",
    Hash,
    cash,
     -,
     a,
     denial,
     of,
     service,
     counter,
    -me,
    asure
    
,"
,
    http,
    ://,
    www,
    .hash,
    cash,
    .org,
    /p,
    apers,
    /hash,
    cash,
    .pdf,
    ,,
     ,
    200,
    2
    
.
,
    [,
    7,
    ],
     R,
    .C,
    .,
     Mer,
    kle,
    ,,
     ",
    Protocols,
     for,
     public,
     key,
     crypt,
    os,
    ystems,
    ,",
     In,
     Proc,
    .,
     ,
    198,
    0,
     Symposium,
     on,
     Security,
     and
    
,
    Privacy,
    ,,
     IEEE,
     Computer,
     Society,
    ,,
     pages,
     ,
    122,
    -,
    133,
    ,,
     April,
     ,
    198,
    0
    
.
,
    [,
    8,
    ],
     W,
    .,
     F,
    eller,
    ,,
     ",
    An,
     introduction,
     to,
     probability,
     theory,
     and,
     its,
     applications,
    ,",
     ,
    195,
    7,
    .
  ],
  Item2: [
    16,
    13,
    42915,
    198,
    36442,
    402,
    290,
    7380,
    853,
    3063,
    316,
    25222,
    6787,
    30710,
    402,
    6790,
    20999,
    17662,
    472,
    198,
    175302,
    6914,
    13531,
    316,
    2273,
    17874,
    18382,
    13,
    8406,
    290,
    2420,
    5882,
    1775,
    4951,
    395,
    198,
    5309,
    22219,
    11,
    480,
    2928,
    89342,
    591,
    290,
    65279,
    72287,
    328,
    290,
    8501,
    4122,
    2359,
    558,
    1059,
    82659,
    2893,
    8618,
    95305,
    22219,
    553,
    625,
    2715,
    4149,
    11,
    3630,
    6790,
    20999,
    6284,
    198,
    138714,
    26584,
    1365,
    69633,
    13,
    623,
    3097,
    328,
    101915,
    21073,
    12469,
    8959,
    11,
    58810,
    290,
    198,
    80931,
    17377,
    12469,
    2349,
    326,
    19412,
    1277,
    290,
    21568,
    395,
    3291,
    21860,
    22219,
    412,
    427,
    1354,
    382,
    261,
    50568,
    3097,
    306,
    290,
    6266,
    328,
    8285,
    316,
    1520,
    2893,
    8618,
    95305,
    18382,
    395,
    2893,
    264,
    95305,
    3581,
    13,
    3813,
    290,
    21568,
    328,
    117109,
    11,
    290,
    1309,
    395,
    8501,
    63691,
    13,
    98904,
    2027,
    2804,
    198,
    1464,
    111615,
    328,
    1043,
    6028,
    11,
    34554,
    3321,
    1373,
    395,
    945,
    2164,
    1572,
    1023,
    1481,
    10275,
    1309,
    558,
    32,
    4454,
    19717,
    328,
    26935,
    382,
    17562,
    472,
    160714,
    13,
    5006,
    8959,
    326,
    9277,
    97628,
    198,
    6929,
    413,
    55911,
    306,
    1647,
    656,
    2360,
    9811,
    18842,
    11,
    889,
    860,
    27004,
    13031,
    316,
    1520,
    18382,
    198,
    2898,
    261,
    24296,
    9334,
    2935,
    261,
    25498,
    7362,
    558,
    4827,
    382,
    6118,
    382,
    448,
    17874,
    9277,
    2420,
    4122,
    402,
    14204,
    19045,
    19545,
    7665,
    328,
    8501,
    412,
    10180,
    289,
    1062,
    1920,
    15302,
    13531,
    316,
    165440,
    8516,
    483,
    2454,
    1273,
    2935,
    290,
    1309,
    395,
    261,
    25498,
    198,
    60279,
    7362,
    13,
    102847,
    484,
    553,
    76423,
    423,
    30234,
    66976,
    316,
    18199,
    1481,
    3319,
    40963,
    198,
    2845,
    26935,
    11,
    326,
    19995,
    166181,
    37230,
    2023,
    7835,
    413,
    20681,
    316,
    3319,
    25359,
    13,
    730,
    198,
    851,
    6651,
    11,
    581,
    22910,
    261,
    7578,
    316,
    290,
    3503,
    29290,
    3258,
    4792,
    2360,
    261,
    24770,
    6487,
    149850,
    7581,
    198,
    35585,
    6017,
    316,
    10419,
    76423,
    19545,
    328,
    290,
    156100,
    2569,
    328,
    22219,
    13,
    623,
    198,
    17360,
    382,
    11846,
    472,
    1701,
    472,
    13734,
    15749,
    68783,
    3580,
    945,
    28391,
    3470,
    1572,
    1062,
    198,
    1191,
    4990,
    1365,
    3566,
    328,
    80180,
    15749,
    558,
    16,
    198,
    17,
    13,
    102847,
    198,
    2167,
    13174,
    448,
    17874,
    22179,
    472,
    261,
    13464,
    328,
    7058,
    65285,
    13,
    11555,
    8667,
    45837,
    290,
    22179,
    316,
    290,
    198,
    7311,
    656,
    101803,
    28266,
    261,
    10691,
    328,
    290,
    5880,
    12469,
    326,
    290,
    751,
    2140,
    328,
    290,
    2613,
    8667,
    198,
    427,
    12673,
    1879,
    316,
    290,
    1268,
    328,
    290,
    22179,
    13,
    355,
    2777,
    2882,
    665,
    14866,
    290,
    65285,
    316,
    14866,
    290,
    13464,
    328,
    198,
    129688,
    558,
    976,
    4792,
    328,
    4165,
    382,
    290,
    2777,
    2882,
    8535,
    14866,
    484,
    1001,
    328,
    290,
    13546,
    2242,
    625,
    3503,
    29290,
    419,
    198,
    3086,
    22179,
    13,
    355,
    5355,
    7578,
    382,
    316,
    26650,
    261,
    25498,
    11082,
    20515,
    11,
    503,
    26801,
    11,
    484,
    22097,
    1753,
    198,
    25961,
    395,
    3503,
    15542,
    13,
    6311,
    2454,
    12469,
    11,
    290,
    22179,
    2804,
    413,
    10508,
    316,
    290,
    26801,
    316,
    198,
    16701,
    261,
    620,
    22179,
    11,
    326,
    1606,
    28969,
    18796,
    8516,
    591,
    290,
    26801,
    553,
    25498,
    625,
    316,
    413,
    3503,
    29290,
    299,
    558,
    976,
    4792,
    483,
    495,
    7578,
    382,
    484,
    290,
    46289,
    328,
    290,
    6508,
    3905,
    2420,
    20102,
    402,
    290,
    198,
    13003,
    6788,
    290,
    26801,
    11,
    483,
    1753,
    12469,
    4566,
    316,
    810,
    1819,
    1373,
    11,
    1327,
    1299,
    261,
    6922,
    558,
    2167,
    1309,
    261,
    2006,
    395,
    290,
    2777,
    2882,
    316,
    1761,
    484,
    290,
    5880,
    13546,
    2242,
    625,
    2232,
    1062,
    11965,
    198,
    90281,
    13,
    2214,
    1039,
    14189,
    11,
    290,
    48721,
    12469,
    382,
    290,
    1001,
    484,
    28991,
    11,
    813,
    581,
    4128,
    2631,
    198,
    15551,
    4849,
    27747,
    316,
    3503,
    29290,
    419,
    13,
    623,
    1606,
    2006,
    316,
    7620,
    290,
    31880,
    328,
    261,
    12469,
    382,
    316,
    198,
    1464,
    14281,
    328,
    722,
    22219,
    13,
    730,
    290,
    26801,
    4122,
    2359,
    11,
    290,
    26801,
    673,
    14281,
    328,
    722,
    22219,
    326,
    198,
    13895,
    6350,
    1118,
    18157,
    1577,
    13,
    2514,
    24226,
    495,
    2935,
    261,
    25498,
    7362,
    11,
    22219,
    2804,
    413,
    198,
    1154,
    423,
    11297,
    723,
    16,
    2155,
    326,
    581,
    1309,
    261,
    2420,
    395,
    17135,
    316,
    10758,
    402,
    261,
    4590,
    5678,
    328,
    290,
    198,
    2143,
    306,
    1118,
    1023,
    1504,
    6100,
    13,
    623,
    2777,
    2882,
    4414,
    19545,
    484,
    540,
    290,
    1058,
    328,
    2454,
    12469,
    11,
    290,
    198,
    44670,
    536,
    328,
    15749,
    12863,
    480,
    673,
    290,
    1577,
    6100,
    558,
    18,
    13,
    61123,
    13261,
    198,
    976,
    7578,
    581,
    22910,
    18015,
    483,
    261,
    24753,
    6017,
    13,
    355,
    24753,
    6017,
    5882,
    656,
    6167,
    261,
    198,
    16909,
    328,
    261,
    4355,
    328,
    4732,
    316,
    413,
    24753,
    295,
    326,
    20360,
    31522,
    290,
    10691,
    11,
    2238,
    472,
    306,
    261,
    198,
    1389,
    83520,
    503,
    5268,
    78322,
    1926,
    723,
    17,
    12,
    20,
    1651,
    623,
    24753,
    56555,
    484,
    290,
    1238,
    2804,
    679,
    49030,
    540,
    290,
    198,
    4580,
    11,
    24525,
    11,
    306,
    2569,
    316,
    717,
    1511,
    290,
    10691,
    13,
    11555,
    24753,
    6664,
    290,
    5880,
    24753,
    306,
    198,
    1348,
    10691,
    11,
    44860,
    261,
    13464,
    11,
    483,
    2454,
    6623,
    24753,
    167061,
    290,
    8104,
    2254,
    480,
    558,
    17,
    198,
    5464,
    198,
    1590,
    9266,
    12646,
    8579,
    198,
    5464,
    198,
    1590,
    9266,
    12646,
    8579,
    198,
    9062,
    198,
    15029,
    220,
    16,
    885,
    198,
    13876,
    7926,
    198,
    15029,
    220,
    15,
    885,
    198,
    28746,
    198,
    8579,
    198,
    9062,
    198,
    15029,
    220,
    17,
    885,
    198,
    13876,
    7926,
    198,
    15029,
    220,
    16,
    885,
    198,
    28746,
    198,
    8579,
    198,
    37762,
    198,
    9062,
    198,
    15029,
    220,
    18,
    885,
    198,
    13876,
    7926,
    198,
    15029,
    220,
    17,
    885,
    198,
    28746,
    198,
    8579,
    198,
    37762,
    198,
    15029,
    220,
    17,
    885,
    198,
    20228,
    7926,
    198,
    15029,
    220,
    16,
    885,
    198,
    20228,
    7926,
    198,
    7898,
    198,
    7898,
    198,
    15029,
    220,
    18,
    885,
    198,
    20228,
    7926,
    198,
    19,
    13,
    65675,
    13108,
    12,
    6908,
    198,
    1385,
    6365,
    261,
    7581,
    24753,
    6017,
    402,
    261,
    24770,
    6487,
    149850,
    9571,
    11,
    581,
    738,
    1309,
    316,
    1199,
    261,
    440,
    78,
    1070,
    69,
    48245,
    2420,
    6771,
    316,
    25552,
    9793,
    885,
    10242,
    74409,
    723,
    21,
    2155,
    7542,
    1572,
    28959,
    503,
    5268,
    78322,
    10043,
    558,
    976,
    19545,
    13108,
    48245,
    23856,
    53387,
    395,
    261,
    1432,
    484,
    1261,
    104474,
    11,
    2238,
    472,
    483,
    58921,
    12,
    5780,
    11,
    290,
    198,
    16909,
    18015,
    483,
    261,
    2086,
    328,
    12421,
    18189,
    13,
    623,
    7848,
    1101,
    3759,
    382,
    116799,
    306,
    290,
    2086,
    198,
    1440,
    12421,
    18189,
    3759,
    326,
    665,
    413,
    29313,
    656,
    58913,
    261,
    4590,
    10691,
    558,
    2653,
    1039,
    24753,
    5402,
    11,
    581,
    6365,
    290,
    19545,
    13108,
    48245,
    656,
    24032,
    289,
    261,
    83204,
    306,
    290,
    198,
    6230,
    4609,
    261,
    1432,
    382,
    2491,
    484,
    8967,
    290,
    4355,
    885,
    10691,
    290,
    3759,
    12421,
    18189,
    13,
    12466,
    290,
    28391,
    198,
    13933,
    390,
    853,
    1339,
    2794,
    3933,
    316,
    1520,
    480,
    35441,
    290,
    19545,
    13108,
    48245,
    11,
    290,
    4355,
    6284,
    413,
    9180,
    198,
    55931,
    322,
    96490,
    290,
    1101,
    13,
    1877,
    4849,
    18125,
    553,
    147277,
    1934,
    480,
    11,
    290,
    1101,
    316,
    3343,
    290,
    4355,
    198,
    83527,
    3931,
    322,
    96490,
    722,
    290,
    18125,
    1934,
    480,
    558,
    976,
    19545,
    13108,
    48245,
    1217,
    129755,
    290,
    4792,
    328,
    38801,
    22311,
    306,
    14945,
    8660,
    198,
    37891,
    13,
    1843,
    290,
    14945,
    1504,
    4122,
    402,
    1001,
    194045,
    83336,
    28925,
    9827,
    1962,
    11,
    480,
    2023,
    413,
    1543,
    43318,
    656,
    7545,
    198,
    562,
    316,
    48502,
    1991,
    10108,
    82,
    13,
    65675,
    13108,
    48245,
    382,
    29212,
    1001,
    12,
    47787,
    28925,
    9827,
    1962,
    13,
    623,
    14945,
    198,
    160595,
    382,
    27328,
    656,
    290,
    37511,
    13464,
    11,
    1118,
    853,
    290,
    16983,
    19545,
    13108,
    48245,
    6942,
    45147,
    198,
    258,
    480,
    13,
    1843,
    261,
    14945,
    328,
    28391,
    3470,
    382,
    23006,
    656,
    13734,
    15749,
    11,
    290,
    13734,
    13464,
    738,
    3839,
    290,
    198,
    10472,
    376,
    326,
    842,
    2612,
    1062,
    45386,
    42636,
    13,
    2514,
    10333,
    261,
    4241,
    4355,
    11,
    448,
    80180,
    1481,
    679,
    316,
    198,
    69380,
    290,
    19545,
    13108,
    48245,
    328,
    290,
    4355,
    326,
    722,
    18125,
    1934,
    480,
    326,
    1815,
    3494,
    869,
    483,
    326,
    61253,
    290,
    198,
    1596,
    328,
    290,
    13734,
    15749,
    13,
    1416,
    738,
    2356,
    4849,
    484,
    290,
    34933,
    328,
    261,
    54189,
    80180,
    52863,
    869,
    198,
    67,
    10528,
    28664,
    134422,
    472,
    29068,
    18125,
    553,
    5768,
    558,
    1385,
    87064,
    395,
    11293,
    18347,
    7733,
    326,
    44689,
    3425,
    306,
    6788,
    15749,
    1072,
    1058,
    412,
    3086,
    19545,
    13108,
    48245,
    24710,
    382,
    16817,
    656,
    261,
    10067,
    7848,
    46228,
    448,
    7848,
    2086,
    328,
    198,
    44754,
    777,
    8825,
    13,
    1843,
    18940,
    13768,
    3101,
    5661,
    11,
    290,
    24710,
    21073,
    558,
    20,
    13,
    11220,
    198,
    976,
    10331,
    316,
    2461,
    290,
    5402,
    553,
    472,
    18183,
    734,
    16,
    8,
    2036,
    22219,
    553,
    22403,
    316,
    722,
    15749,
    558,
    17,
    8,
    11555,
    4596,
    76241,
    620,
    22219,
    1511,
    261,
    4355,
    558,
    18,
    8,
    11555,
    4596,
    5882,
    402,
    12129,
    261,
    6541,
    19545,
    13108,
    48245,
    395,
    1617,
    4355,
    558,
    19,
    8,
    4296,
    261,
    4596,
    22016,
    261,
    19545,
    13108,
    48245,
    11,
    480,
    120969,
    290,
    4355,
    316,
    722,
    15749,
    558,
    20,
    8,
    117721,
    5923,
    290,
    4355,
    1606,
    538,
    722,
    22219,
    306,
    480,
    553,
    4529,
    326,
    625,
    4279,
    11228,
    558,
    21,
    8,
    117721,
    6101,
    1043,
    38916,
    328,
    290,
    4355,
    656,
    4113,
    402,
    9278,
    290,
    2613,
    4355,
    306,
    290,
    198,
    13289,
    11,
    2360,
    290,
    10691,
    328,
    290,
    17562,
    4355,
    472,
    290,
    5880,
    10691,
    558,
    16704,
    3324,
    3331,
    290,
    37511,
    13464,
    316,
    413,
    290,
    6145,
    1001,
    326,
    738,
    3357,
    4113,
    402,
    198,
    779,
    3258,
    480,
    13,
    1843,
    1920,
    15749,
    22403,
    2647,
    17980,
    328,
    290,
    2613,
    4355,
    38328,
    11,
    1236,
    198,
    44664,
    1340,
    6442,
    1001,
    503,
    290,
    1273,
    1577,
    13,
    730,
    484,
    1890,
    11,
    1023,
    1101,
    402,
    290,
    1577,
    1001,
    1023,
    6100,
    412,
    8293,
    5093,
    290,
    1273,
    14338,
    306,
    1890,
    480,
    14081,
    7411,
    13,
    623,
    22244,
    738,
    413,
    17162,
    1261,
    290,
    2613,
    440,
    78,
    1070,
    69,
    48245,
    382,
    2491,
    326,
    1001,
    14338,
    14081,
    7411,
    26,
    290,
    15749,
    484,
    1504,
    4113,
    402,
    290,
    1273,
    198,
    36005,
    738,
    1815,
    6160,
    316,
    290,
    7411,
    1001,
    558,
    18,
    198,
    5464,
    198,
    34559,
    10242,
    13763,
    400,
    198,
    23425,
    42967,
    12646,
    5464,
    198,
    34559,
    10242,
    13763,
    400,
    198,
    23425,
    42967,
    12646,
    3443,
    12469,
    120969,
    621,
    625,
    23517,
    1309,
    316,
    7627,
    722,
    15749,
    13,
    1877,
    1701,
    472,
    1023,
    7627,
    198,
    74032,
    15749,
    11,
    1023,
    738,
    717,
    1511,
    261,
    4355,
    2254,
    1701,
    13,
    13063,
    120969,
    553,
    1217,
    131637,
    328,
    22664,
    198,
    35427,
    13,
    1843,
    261,
    4596,
    2226,
    625,
    6442,
    261,
    4355,
    11,
    480,
    738,
    2616,
    480,
    1261,
    480,
    35399,
    290,
    2613,
    4355,
    326,
    198,
    13187,
    6370,
    480,
    20677,
    1001,
    558,
    21,
    13,
    131766,
    585,
    198,
    1582,
    39395,
    11,
    290,
    1577,
    12469,
    306,
    261,
    4355,
    382,
    261,
    3582,
    12469,
    484,
    13217,
    261,
    620,
    22179,
    18255,
    198,
    2345,
    290,
    33288,
    328,
    290,
    4355,
    13,
    1328,
    19282,
    448,
    60708,
    395,
    15749,
    316,
    2498,
    290,
    5402,
    11,
    326,
    6008,
    198,
    64,
    2006,
    316,
    25998,
    29111,
    28969,
    1511,
    41920,
    11,
    3630,
    1354,
    382,
    860,
    11082,
    20515,
    316,
    6626,
    1373,
    558,
    976,
    37403,
    5856,
    328,
    261,
    9594,
    328,
    4527,
    328,
    620,
    28969,
    382,
    173247,
    316,
    8568,
    94773,
    2794,
    3258,
    198,
    25623,
    316,
    1147,
    8568,
    316,
    41920,
    13,
    730,
    1039,
    1890,
    11,
    480,
    382,
    28391,
    1058,
    326,
    25093,
    484,
    382,
    2794,
    3933,
    558,
    976,
    60708,
    665,
    1217,
    413,
    42858,
    483,
    12469,
    12634,
    13,
    1843,
    290,
    4733,
    1432,
    328,
    261,
    12469,
    382,
    198,
    2695,
    1572,
    1617,
    3422,
    1432,
    11,
    290,
    9809,
    382,
    261,
    12469,
    12711,
    484,
    382,
    5768,
    316,
    290,
    60708,
    1432,
    328,
    198,
    3086,
    4355,
    15683,
    290,
    12469,
    13,
    12466,
    261,
    123156,
    2086,
    328,
    28969,
    679,
    18375,
    198,
    31224,
    41845,
    11,
    290,
    60708,
    665,
    14463,
    19449,
    316,
    12469,
    12634,
    326,
    413,
    9141,
    39362,
    198,
    18847,
    558,
    976,
    60708,
    1340,
    1652,
    17636,
    15749,
    316,
    5092,
    13734,
    13,
    1843,
    261,
    107110,
    80180,
    382,
    3741,
    316,
    198,
    69448,
    945,
    28391,
    3470,
    1572,
    722,
    290,
    13734,
    15749,
    11,
    501,
    1481,
    679,
    316,
    5655,
    2870,
    2360,
    480,
    198,
    935,
    1056,
    148238,
    1665,
    656,
    78699,
    1602,
    1232,
    18382,
    11,
    503,
    2360,
    480,
    316,
    10419,
    620,
    28969,
    13,
    1679,
    26806,
    316,
    198,
    6555,
    480,
    945,
    42749,
    316,
    2107,
    656,
    290,
    9607,
    11,
    2238,
    9607,
    484,
    16311,
    2395,
    483,
    945,
    620,
    28969,
    1572,
    198,
    182485,
    1203,
    15890,
    11,
    1572,
    316,
    118264,
    290,
    2420,
    326,
    290,
    56294,
    328,
    1232,
    2316,
    19859,
    558,
    22,
    13,
    907,
    18410,
    289,
    42223,
    19468,
    198,
    18049,
    290,
    6898,
    12469,
    306,
    261,
    22179,
    382,
    50232,
    1641,
    4951,
    18125,
    11,
    290,
    11228,
    22219,
    2254,
    198,
    278,
    665,
    413,
    88047,
    316,
    5093,
    18044,
    4918,
    13,
    2514,
    36296,
    495,
    2935,
    24212,
    290,
    4355,
    885,
    10691,
    412,
    90281,
    553,
    104474,
    306,
    261,
    9708,
    24765,
    14224,
    723,
    22,
    2696,
    17,
    2696,
    20,
    2155,
    483,
    1606,
    290,
    6577,
    7360,
    306,
    290,
    4355,
    885,
    10691,
    558,
    20612,
    18125,
    665,
    1815,
    413,
    21126,
    295,
    656,
    420,
    117942,
    1277,
    34625,
    328,
    290,
    8165,
    13,
    623,
    13878,
    131101,
    621,
    198,
    2878,
    1309,
    316,
    413,
    16240,
    558,
    32,
    4355,
    8211,
    483,
    860,
    22219,
    1481,
    413,
    1078,
    220,
    2241,
    11643,
    13,
    1843,
    581,
    35968,
    18125,
    553,
    198,
    25212,
    1753,
    220,
    702,
    5438,
    11,
    220,
    2241,
    11643,
    425,
    220,
    21,
    425,
    220,
    1494,
    425,
    220,
    10376,
    314,
    220,
    19,
    13,
    17,
    13874,
    777,
    1284,
    13,
    3813,
    7595,
    7511,
    198,
    176916,
    14279,
    483,
    220,
    17,
    9068,
    328,
    32280,
    472,
    328,
    220,
    1179,
    23,
    11,
    326,
    40312,
    885,
    9740,
    95074,
    2208,
    8266,
    328,
    198,
    16,
    13,
    17,
    9068,
    777,
    1284,
    11,
    7928,
    1757,
    625,
    413,
    261,
    4792,
    1952,
    538,
    290,
    4355,
    13483,
    2804,
    413,
    13185,
    306,
    198,
    37835,
    558,
    19,
    198,
    5464,
    13063,
    198,
    5464,
    22056,
    350,
    5464,
    10242,
    446,
    34559,
    10242,
    13763,
    400,
    198,
    8579,
    2290,
    198,
    8579,
    15,
    10242,
    16,
    10242,
    17,
    10242,
    18,
    198,
    8579,
    1860,
    198,
    10834,
    10242,
    198,
    8579,
    2290,
    198,
    8579,
    17,
    198,
    23425,
    18,
    198,
    8579,
    1860,
    198,
    5464,
    22056,
    350,
    5464,
    10242,
    446,
    10834,
    10242,
    198,
    53555,
    15947,
    1736,
    306,
    261,
    9708,
    24765,
    14224,
    6311,
    2284,
    30541,
    42967,
    15,
    12,
    17,
    591,
    290,
    13063,
    198,
    34559,
    10242,
    13763,
    400,
    198,
    8579,
    18,
    198,
    23425,
    15,
    42967,
    16,
    42967,
    17,
    42967,
    18,
    198,
    23,
    13,
    92258,
    2720,
    26873,
    90986,
    198,
    3206,
    382,
    4149,
    316,
    14866,
    18382,
    2935,
    6788,
    261,
    3149,
    5402,
    4596,
    13,
    355,
    1825,
    1606,
    4414,
    316,
    3357,
    198,
    64,
    5150,
    328,
    290,
    4355,
    13483,
    328,
    290,
    37511,
    19545,
    13108,
    48245,
    13464,
    11,
    1118,
    501,
    665,
    717,
    656,
    193515,
    198,
    26724,
    15749,
    4609,
    19016,
    42865,
    501,
    853,
    290,
    37511,
    13464,
    11,
    326,
    9579,
    290,
    9708,
    24765,
    14338,
    198,
    3942,
    289,
    290,
    12469,
    316,
    290,
    4355,
    4275,
    24753,
    295,
    306,
    13,
    1679,
    8535,
    2371,
    290,
    12469,
    395,
    198,
    35563,
    1156,
    11,
    889,
    656,
    48160,
    480,
    316,
    261,
    2475,
    306,
    290,
    13464,
    11,
    501,
    665,
    1921,
    484,
    261,
    5402,
    4596,
    853,
    17562,
    480,
    412,
    427,
    18125,
    5768,
    1934,
    480,
    6544,
    7620,
    290,
    5402,
    853,
    17562,
    480,
    558,
    2305,
    2238,
    11,
    290,
    34496,
    382,
    15048,
    472,
    1701,
    472,
    13734,
    15749,
    3580,
    290,
    5402,
    11,
    889,
    382,
    945,
    198,
    85,
    105401,
    562,
    538,
    290,
    5402,
    382,
    1072,
    93217,
    656,
    448,
    80180,
    13,
    8406,
    5402,
    15749,
    665,
    14866,
    198,
    90281,
    395,
    9247,
    11,
    290,
    77177,
    2595,
    665,
    413,
    147879,
    656,
    448,
    10192,
    52468,
    114796,
    198,
    90281,
    395,
    472,
    1701,
    472,
    290,
    80180,
    665,
    4901,
    316,
    178585,
    290,
    5402,
    13,
    5108,
    10772,
    316,
    198,
    111724,
    4372,
    495,
    1481,
    413,
    316,
    5923,
    47960,
    591,
    5402,
    15749,
    1261,
    1023,
    11839,
    448,
    15796,
    198,
    6230,
    11,
    122757,
    290,
    49366,
    4305,
    316,
    4340,
    290,
    3149,
    4355,
    326,
    155908,
    22219,
    316,
    198,
    25464,
    290,
    54515,
    81081,
    13,
    81176,
    484,
    6442,
    26836,
    18382,
    738,
    7038,
    2928,
    1682,
    316,
    198,
    12935,
    1043,
    2316,
    15749,
    395,
    945,
    13313,
    7203,
    326,
    54318,
    34496,
    558,
    24,
    13,
    158741,
    326,
    68506,
    6603,
    9963,
    198,
    25731,
    480,
    1481,
    413,
    4149,
    316,
    5318,
    28969,
    44468,
    11,
    480,
    1481,
    413,
    26347,
    1174,
    88,
    316,
    1520,
    261,
    198,
    344,
    60471,
    12469,
    395,
    1753,
    2427,
    306,
    261,
    8890,
    13,
    2514,
    3763,
    1432,
    316,
    413,
    12648,
    326,
    15890,
    412,
    90281,
    10232,
    7598,
    21963,
    326,
    32725,
    13,
    85116,
    1354,
    738,
    413,
    4784,
    261,
    4590,
    3422,
    198,
    2845,
    261,
    12384,
    5880,
    12469,
    503,
    7598,
    21963,
    48784,
    13679,
    22586,
    11,
    326,
    540,
    1645,
    1920,
    198,
    94851,
    25,
    1001,
    395,
    290,
    9277,
    11,
    326,
    1001,
    22968,
    290,
    3343,
    11,
    538,
    1062,
    11,
    1602,
    316,
    290,
    10070,
    558,
    3206,
    1757,
    413,
    19700,
    484,
    6831,
    14373,
    11,
    1919,
    261,
    12469,
    20102,
    402,
    4919,
    22219,
    11,
    326,
    2617,
    198,
    90281,
    9630,
    402,
    1991,
    945,
    11,
    382,
    625,
    261,
    4792,
    2105,
    13,
    3274,
    382,
    3779,
    290,
    1309,
    316,
    13424,
    261,
    198,
    26232,
    77670,
    5150,
    328,
    261,
    12469,
    885,
    5678,
    558,
    20,
    198,
    9062,
    198,
    637,
    198,
    4908,
    637,
    6042,
    198,
    4908,
    8579,
    2290,
    198,
    8579,
    17,
    10242,
    18,
    198,
    8579,
    1860,
    198,
    5464,
    22056,
    198,
    119812,
    282,
    31804,
    198,
    34559,
    10242,
    13763,
    400,
    198,
    5464,
    22056,
    198,
    119812,
    282,
    31804,
    198,
    34559,
    10242,
    13763,
    400,
    198,
    5464,
    22056,
    198,
    119812,
    282,
    31804,
    198,
    34559,
    10242,
    13763,
    400,
    198,
    119812,
    282,
    42649,
    395,
    42967,
    18,
    198,
    179617,
    65675,
    13108,
    12,
    6908,
    43814,
    198,
    23425,
    18,
    198,
    702,
    13,
    25695,
    198,
    976,
    10634,
    31678,
    2359,
    136969,
    261,
    3211,
    328,
    16480,
    656,
    58810,
    3158,
    316,
    2164,
    316,
    290,
    198,
    5815,
    566,
    9808,
    326,
    290,
    25498,
    6914,
    7362,
    13,
    623,
    53523,
    316,
    31545,
    722,
    22219,
    38991,
    198,
    2235,
    12639,
    495,
    2595,
    11,
    889,
    16480,
    665,
    2928,
    413,
    26871,
    656,
    24212,
    290,
    7845,
    328,
    2164,
    306,
    198,
    74224,
    2475,
    25,
    656,
    13958,
    751,
    12994,
    39963,
    13,
    623,
    751,
    665,
    1921,
    484,
    5693,
    382,
    18560,
    198,
    270,
    4527,
    316,
    5693,
    1203,
    11,
    889,
    2935,
    2164,
    48160,
    290,
    12469,
    316,
    7545,
    13,
    1328,
    382,
    198,
    88722,
    316,
    290,
    3211,
    328,
    2164,
    9917,
    656,
    6546,
    48248,
    11,
    1919,
    290,
    1058,
    326,
    2349,
    328,
    198,
    103076,
    42264,
    11,
    290,
    392,
    83,
    2480,
    672,
    382,
    2452,
    751,
    11,
    889,
    2935,
    20186,
    1218,
    290,
    13531,
    1504,
    558,
    2305,
    448,
    6623,
    82475,
    11,
    261,
    620,
    2140,
    10610,
    1757,
    413,
    2061,
    395,
    2454,
    12469,
    316,
    3357,
    1373,
    198,
    2845,
    2447,
    17002,
    316,
    261,
    5355,
    8667,
    13,
    6083,
    48160,
    382,
    2928,
    160714,
    483,
    12151,
    28375,
    198,
    90281,
    11,
    1118,
    23517,
    26477,
    484,
    1043,
    21963,
    1504,
    18255,
    656,
    290,
    2684,
    8667,
    13,
    623,
    7031,
    198,
    276,
    484,
    538,
    290,
    8667,
    328,
    261,
    2140,
    382,
    19240,
    11,
    48160,
    2023,
    26477,
    1273,
    22219,
    484,
    98146,
    316,
    198,
    3086,
    2684,
    8667,
    558,
    994,
    13,
    57243,
    929,
    198,
    2167,
    3331,
    290,
    25697,
    328,
    448,
    80180,
    6700,
    316,
    10419,
    448,
    43193,
    13464,
    16107,
    1572,
    290,
    13734,
    198,
    13289,
    13,
    10669,
    538,
    495,
    382,
    37260,
    11,
    480,
    2226,
    625,
    4268,
    290,
    2420,
    2494,
    316,
    56424,
    6629,
    11,
    2238,
    198,
    288,
    9278,
    1432,
    842,
    328,
    22558,
    3693,
    503,
    6167,
    3905,
    484,
    3779,
    98146,
    316,
    290,
    80180,
    13,
    117721,
    553,
    198,
    2878,
    2966,
    316,
    5923,
    448,
    15796,
    12469,
    472,
    9277,
    11,
    326,
    13734,
    15749,
    738,
    3779,
    5923,
    261,
    4355,
    198,
    1377,
    2649,
    1373,
    13,
    1689,
    80180,
    665,
    1606,
    2075,
    316,
    3343,
    1001,
    328,
    1232,
    2316,
    22219,
    316,
    2304,
    1602,
    198,
    52994,
    501,
    8422,
    11228,
    558,
    976,
    11286,
    2870,
    290,
    13734,
    13464,
    326,
    448,
    80180,
    13464,
    665,
    413,
    45624,
    472,
    261,
    30917,
    42600,
    198,
    16537,
    17926,
    13,
    623,
    3505,
    2104,
    382,
    290,
    13734,
    13464,
    2447,
    17290,
    656,
    1001,
    4355,
    11,
    11293,
    1617,
    198,
    57600,
    656,
    659,
    16,
    11,
    326,
    290,
    14090,
    2104,
    382,
    290,
    10192,
    52468,
    13464,
    2447,
    17290,
    656,
    1001,
    4355,
    11,
    25040,
    290,
    198,
    61115,
    656,
    533,
    16,
    558,
    976,
    34933,
    328,
    448,
    80180,
    52863,
    869,
    591,
    261,
    4335,
    57325,
    382,
    173247,
    316,
    261,
    109691,
    1639,
    885,
    198,
    49,
    28482,
    4792,
    13,
    183159,
    261,
    177649,
    483,
    34136,
    6871,
    13217,
    540,
    261,
    57325,
    326,
    17473,
    23859,
    448,
    198,
    258,
    50261,
    2086,
    328,
    32312,
    316,
    2075,
    316,
    7627,
    5218,
    814,
    1066,
    13,
    1416,
    665,
    17950,
    290,
    34933,
    501,
    4862,
    198,
    264,
    19704,
    5218,
    814,
    1066,
    11,
    503,
    484,
    448,
    80180,
    4862,
    73809,
    869,
    483,
    290,
    13734,
    13464,
    11,
    472,
    18183,
    723,
    23,
    22152,
    79,
    314,
    34933,
    448,
    13734,
    4596,
    22016,
    290,
    2613,
    4355,
    198,
    80,
    314,
    34933,
    290,
    80180,
    22016,
    290,
    2613,
    4355,
    198,
    80,
    89,
    314,
    34933,
    290,
    80180,
    738,
    4862,
    3494,
    869,
    591,
    579,
    18125,
    7807,
    198,
    21,
    198,
    10244,
    1629,
    102847,
    112943,
    198,
    47556,
    15703,
    32251,
    59224,
    5473,
    198,
    10244,
    1629,
    102847,
    5473,
    198,
    3443,
    25695,
    8186,
    198,
    128569,
    25695,
    8186,
    198,
    39520,
    1039,
    57291,
    484,
    275,
    1424,
    2335,
    11,
    290,
    34933,
    32321,
    134422,
    472,
    290,
    2086,
    328,
    18125,
    290,
    198,
    2002,
    17798,
    853,
    316,
    3494,
    869,
    483,
    21073,
    13,
    3813,
    290,
    28374,
    4372,
    2395,
    11,
    538,
    501,
    8740,
    1520,
    261,
    23767,
    198,
    75,
    18569,
    6687,
    6047,
    402,
    11,
    1232,
    20973,
    5025,
    1164,
    7281,
    423,
    3291,
    472,
    501,
    25709,
    6544,
    7807,
    558,
    2167,
    1954,
    3331,
    1495,
    1701,
    290,
    30879,
    328,
    261,
    620,
    12469,
    4414,
    316,
    5238,
    2254,
    2447,
    198,
    82,
    43934,
    423,
    4454,
    290,
    10070,
    8535,
    3343,
    290,
    12469,
    13,
    1416,
    19429,
    290,
    10070,
    382,
    448,
    80180,
    198,
    29997,
    10648,
    316,
    1520,
    290,
    30879,
    6423,
    501,
    9927,
    2395,
    395,
    261,
    2049,
    11,
    1815,
    6160,
    480,
    316,
    2777,
    1602,
    316,
    198,
    35563,
    1156,
    1934,
    1236,
    1058,
    853,
    10292,
    13,
    623,
    25861,
    738,
    413,
    155908,
    1261,
    484,
    13367,
    11,
    889,
    290,
    198,
    27234,
    28032,
    480,
    738,
    413,
    3101,
    7844,
    558,
    976,
    25861,
    48782,
    261,
    620,
    2140,
    10610,
    326,
    8967,
    290,
    751,
    2140,
    316,
    290,
    10070,
    35456,
    2254,
    198,
    14677,
    289,
    13,
    1328,
    46396,
    290,
    10070,
    591,
    27673,
    261,
    13464,
    328,
    18125,
    12207,
    328,
    1058,
    656,
    4113,
    402,
    198,
    278,
    40371,
    4609,
    501,
    382,
    23767,
    4951,
    316,
    717,
    4150,
    4951,
    12207,
    11,
    1815,
    58913,
    290,
    12469,
    540,
    198,
    14116,
    4205,
    13,
    12466,
    290,
    12469,
    382,
    3860,
    11,
    290,
    173541,
    10070,
    13217,
    4113,
    306,
    9910,
    402,
    261,
    198,
    118027,
    13464,
    15683,
    448,
    43193,
    3926,
    328,
    1232,
    12469,
    558,
    976,
    30879,
    99777,
    4609,
    290,
    12469,
    853,
    1339,
    5768,
    316,
    261,
    4355,
    326,
    579,
    18125,
    679,
    1339,
    198,
    78492,
    1934,
    480,
    13,
    1679,
    8740,
    1761,
    290,
    6354,
    4527,
    328,
    7408,
    290,
    80180,
    853,
    2452,
    11,
    889,
    198,
    141027,
    290,
    13734,
    18125,
    6066,
    290,
    7848,
    5930,
    1058,
    777,
    4355,
    11,
    290,
    10192,
    52468,
    6451,
    198,
    31705,
    738,
    413,
    261,
    12692,
    34350,
    12545,
    483,
    5930,
    1432,
    734,
    1385,
    717,
    290,
    34933,
    290,
    80180,
    2023,
    2928,
    3494,
    869,
    1954,
    11,
    581,
    57388,
    290,
    12692,
    34350,
    27591,
    395,
    198,
    21309,
    4527,
    328,
    7408,
    501,
    2023,
    679,
    2452,
    656,
    290,
    34933,
    501,
    2023,
    3494,
    869,
    591,
    484,
    2438,
    734,
    720,
    1614,
    10592,
    316,
    8397,
    16552,
    289,
    290,
    48413,
    12742,
    328,
    290,
    12545,
    4908,
    909,
    94938,
    316,
    363,
    3490,
    4908,
    2165,
    464,
    20310,
    1508,
    523,
    9489,
    11278,
    17798,
    9909,
    95558,
    17684,
    2335,
    11,
    677,
    579,
    446,
    745,
    3503,
    275,
    314,
    220,
    16,
    13,
    15,
    533,
    2335,
    307,
    3503,
    27871,
    314,
    579,
    425,
    350,
    80,
    820,
    275,
    362,
    3503,
    4215,
    314,
    220,
    16,
    13,
    15,
    307,
    677,
    575,
    11,
    372,
    307,
    395,
    350,
    74,
    314,
    220,
    15,
    26,
    372,
    5017,
    579,
    26,
    372,
    7622,
    405,
    3503,
    128844,
    314,
    2794,
    8087,
    35280,
    362,
    395,
    350,
    72,
    314,
    220,
    16,
    26,
    575,
    5017,
    372,
    26,
    575,
    7622,
    128844,
    25253,
    27871,
    820,
    575,
    307,
    4215,
    12583,
    128844,
    425,
    350,
    16,
    533,
    9779,
    21479,
    820,
    275,
    11,
    579,
    533,
    372,
    1820,
    606,
    622,
    4215,
    307,
    739,
    22,
    198,
    28738,
    1236,
    4376,
    11,
    581,
    665,
    1921,
    290,
    34933,
    9440,
    1277,
    134422,
    483,
    579,
    558,
    80,
    28,
    15,
    13,
    16,
    198,
    89,
    28,
    15,
    398,
    28,
    16,
    13,
    1302,
    1302,
    15,
    198,
    89,
    28,
    16,
    398,
    28,
    15,
    13,
    14397,
    42696,
    18,
    198,
    89,
    28,
    17,
    398,
    28,
    15,
    13,
    27707,
    46392,
    24,
    198,
    89,
    28,
    18,
    398,
    28,
    15,
    13,
    27819,
    19249,
    17,
    198,
    89,
    28,
    19,
    398,
    28,
    15,
    13,
    11822,
    36075,
    17,
    198,
    89,
    28,
    20,
    398,
    28,
    15,
    13,
    1302,
    46712,
    22,
    198,
    89,
    28,
    21,
    398,
    28,
    15,
    13,
    1302,
    24472,
    23,
    198,
    89,
    28,
    22,
    398,
    28,
    15,
    13,
    1302,
    39806,
    22,
    198,
    89,
    28,
    23,
    398,
    28,
    15,
    13,
    1302,
    30526,
    18,
    198,
    89,
    28,
    24,
    398,
    28,
    15,
    13,
    1302,
    16680,
    21,
    198,
    89,
    28,
    702,
    398,
    28,
    15,
    13,
    1302,
    7659,
    17,
    198,
    80,
    28,
    15,
    13,
    18,
    198,
    89,
    28,
    15,
    398,
    28,
    16,
    13,
    1302,
    1302,
    15,
    198,
    89,
    28,
    20,
    398,
    28,
    15,
    13,
    19227,
    31083,
    18,
    198,
    89,
    28,
    702,
    398,
    28,
    15,
    13,
    37348,
    32756,
    20,
    198,
    89,
    28,
    1055,
    398,
    28,
    15,
    13,
    13522,
    1353,
    23,
    198,
    89,
    28,
    455,
    398,
    28,
    15,
    13,
    11950,
    19050,
    19,
    198,
    89,
    28,
    1161,
    398,
    28,
    15,
    13,
    1302,
    43405,
    17,
    198,
    89,
    28,
    1130,
    398,
    28,
    15,
    13,
    1302,
    17336,
    17,
    198,
    89,
    28,
    2467,
    398,
    28,
    15,
    13,
    1302,
    41227,
    24,
    198,
    89,
    28,
    1723,
    398,
    28,
    15,
    13,
    1302,
    24141,
    20,
    198,
    89,
    28,
    2548,
    398,
    28,
    15,
    13,
    1302,
    11950,
    19,
    198,
    89,
    28,
    1434,
    398,
    28,
    15,
    13,
    1302,
    1302,
    21,
    198,
    32448,
    5581,
    395,
    398,
    3760,
    1572,
    220,
    15,
    13,
    16,
    4,
    4908,
    47,
    464,
    220,
    15,
    13,
    7659,
    198,
    80,
    28,
    15,
    13,
    702,
    579,
    28,
    20,
    198,
    80,
    28,
    15,
    13,
    1055,
    579,
    28,
    23,
    198,
    80,
    28,
    15,
    13,
    455,
    579,
    28,
    994,
    198,
    80,
    28,
    15,
    13,
    1161,
    579,
    28,
    1055,
    198,
    80,
    28,
    15,
    13,
    1130,
    579,
    28,
    1494,
    198,
    80,
    28,
    15,
    13,
    2467,
    579,
    28,
    4987,
    198,
    80,
    28,
    15,
    13,
    1723,
    579,
    28,
    7479,
    198,
    80,
    28,
    15,
    13,
    2548,
    579,
    28,
    23527,
    198,
    899,
    13,
    98264,
    198,
    2167,
    679,
    17994,
    261,
    2420,
    395,
    17874,
    22219,
    2935,
    64139,
    402,
    8501,
    13,
    1416,
    5424,
    483,
    198,
    3086,
    19261,
    18919,
    328,
    28969,
    2452,
    591,
    7058,
    65285,
    11,
    1118,
    6008,
    5532,
    3580,
    328,
    198,
    129688,
    11,
    889,
    382,
    60592,
    2935,
    261,
    2006,
    316,
    7332,
    3503,
    29290,
    3258,
    13,
    2514,
    17722,
    495,
    11,
    581,
    198,
    823,
    25082,
    261,
    24770,
    6487,
    149850,
    5402,
    2360,
    19545,
    13108,
    48245,
    316,
    3704,
    261,
    751,
    5678,
    328,
    22219,
    198,
    14116,
    8065,
    14081,
    76423,
    423,
    30234,
    66976,
    395,
    448,
    80180,
    316,
    3343,
    538,
    13734,
    15749,
    198,
    5627,
    261,
    14945,
    328,
    28391,
    3470,
    13,
    623,
    5402,
    382,
    26497,
    306,
    1617,
    537,
    85679,
    57516,
    13,
    117721,
    198,
    1596,
    722,
    540,
    4730,
    483,
    3389,
    53120,
    13,
    3164,
    621,
    625,
    1309,
    316,
    413,
    17800,
    11,
    3630,
    10854,
    553,
    198,
    2878,
    152607,
    316,
    1062,
    5024,
    2475,
    326,
    1606,
    1309,
    316,
    413,
    14942,
    402,
    261,
    1636,
    6942,
    9571,
    13,
    117721,
    665,
    198,
    47897,
    326,
    322,
    10891,
    290,
    5402,
    540,
    738,
    11,
    41592,
    290,
    19545,
    13108,
    48245,
    13464,
    472,
    19545,
    328,
    1412,
    198,
    71,
    903,
    12848,
    2049,
    1023,
    1504,
    12299,
    13,
    3164,
    14048,
    483,
    1043,
    28391,
    3470,
    11,
    64743,
    1043,
    38916,
    328,
    198,
    3197,
    18125,
    656,
    4113,
    402,
    53271,
    1373,
    326,
    151025,
    15796,
    18125,
    656,
    93492,
    316,
    1101,
    402,
    198,
    76821,
    13,
    8281,
    6118,
    9607,
    326,
    55079,
    665,
    413,
    96357,
    483,
    495,
    46012,
    27004,
    558,
    23,
    198,
    54037,
    198,
    58,
    16,
    60,
    486,
    13,
    127773,
    11,
    392,
    65,
    132065,
    3532,
    3958,
    1684,
    3064,
    45432,
    163526,
    1136,
    7611,
    52994,
    7186,
    11,
    220,
    3204,
    23,
    558,
    58,
    17,
    60,
    487,
    13,
    12485,
    2682,
    11,
    2127,
    1242,
    13,
    7541,
    4977,
    11,
    326,
    643,
    14121,
    41,
    13,
    3106,
    276,
    351,
    1005,
    11,
    392,
    21295,
    328,
    261,
    11846,
    24753,
    289,
    2570,
    483,
    19957,
    198,
    90349,
    9140,
    3532,
    730,
    220,
    455,
    404,
    111426,
    402,
    8623,
    52379,
    306,
    290,
    8462,
    296,
    1778,
    11,
    4273,
    220,
    3204,
    24,
    558,
    58,
    18,
    60,
    336,
    13,
    154997,
    11,
    486,
    1242,
    13,
    901,
    2558,
    20476,
    11,
    392,
    5299,
    316,
    1058,
    6321,
    1515,
    261,
    7058,
    3213,
    3532,
    730,
    17093,
    328,
    65100,
    3035,
    11,
    2639,
    220,
    18,
    11,
    860,
    198,
    17,
    11,
    8537,
    220,
    2058,
    12,
    8780,
    11,
    220,
    3204,
    16,
    558,
    58,
    19,
    60,
    415,
    13,
    41594,
    11,
    336,
    13,
    154997,
    11,
    486,
    1242,
    13,
    901,
    2558,
    20476,
    11,
    392,
    95065,
    5581,
    290,
    17456,
    326,
    37673,
    328,
    7058,
    1058,
    6321,
    53820,
    88030,
    637,
    1550,
    16559,
    9839,
    25,
    33276,
    306,
    41443,
    11,
    13516,
    326,
    24026,
    13993,
    11,
    8537,
    220,
    33424,
    12,
    30299,
    11,
    220,
    3204,
    18,
    558,
    58,
    20,
    60,
    336,
    13,
    154997,
    11,
    486,
    1242,
    13,
    901,
    2558,
    20476,
    11,
    392,
    60646,
    8747,
    395,
    3546,
    12,
    41195,
    3532,
    730,
    115349,
    328,
    290,
    220,
    19,
    404,
    153733,
    21698,
    198,
    263,
    24026,
    326,
    39248,
    13516,
    11,
    8537,
    220,
    2029,
    12,
    2467,
    11,
    7655,
    220,
    3204,
    22,
    558,
    58,
    21,
    60,
    355,
    13,
    9793,
    11,
    392,
    8579,
    74409,
    533,
    261,
    77358,
    328,
    2570,
    9446,
    25323,
    5450,
    88030,
    2903,
    1684,
    3064,
    25140,
    74409,
    4519,
    8138,
    19624,
    167334,
    74409,
    30948,
    11,
    220,
    1179,
    17,
    558,
    58,
    22,
    60,
    460,
    2010,
    13,
    9708,
    24765,
    11,
    392,
    166744,
    395,
    751,
    2140,
    14204,
    365,
    55652,
    3532,
    730,
    61817,
    13,
    220,
    4745,
    15,
    111426,
    402,
    13516,
    326,
    198,
    63801,
    11,
    81602,
    24026,
    18866,
    11,
    8537,
    220,
    14785,
    12,
    16518,
    11,
    7655,
    220,
    4745,
    15,
    558,
    58,
    23,
    60,
    486,
    13,
    454,
    4806,
    11,
    392,
    2223,
    22575,
    316,
    34933,
    17346,
    326,
    1617,
    9391,
    3532,
    220,
    7866,
    22,
    13
  ]
}